iir_1	['information retrieval', 'documents', 'document', 'collections', 'collection', 'database-style searching', 'unstructured data', 'structured data', 'relational database', 'latent linguistic structure', 'clustering', 'web search', 'indexing', 'personal information retrieval', 'text classification', 'term-document matrix', 'boolean retrieval model', 'boolean queries', 'classification', 'information retrieval systems', 'centralized file systems', 'inverted index', 'search', 'rankings', 'terms', 'personal search']
iir_1_1	['information retrieval', 'document retrieval', 'grepping', 'grep', 'wildcard pattern matching', 'collections', 'collection', 'index', 'term-document incidence matrix', 'terms', 'term', 'query', 'querying', 'boolean retrieval model', 'documents', 'document', 'retrieval system', 'corpus', 'ad hoc retrieval', 'information need', 'relevant', 'relevance', 'precision', 'recall', 'inverted index', 'inverted file', 'dictionary', 'lexicon', 'vocabulary', 'document collections', 'document collection', 'ranked retrieval', 'incidence matrix', 'effectiveness', 'term-document matrix', 'posting', 'postings', 'postings list', 'inverted list', 'binary term-document incidence matrix', 'ir', 'relevant documents', 'ir system']
iir_1_2	['inverted index', 'index', 'indexing', 'tokens', 'normalized tokens', 'document identifier', 'sorting', 'document', 'documents', 'dictionary', 'postings', 'posting', 'term', 'terms', 'document frequency', 'boolean search engine', 'query', 'ranked retrieval models', 'data structure', 'document collection', 'docid', 'index construction', 'ad hoc text search', 'postings list', 'indexing terms', 'sort-based indexing', 'efficiency', 'singly linked lists', 'skip lists', 'explicit pointers', 'pointer', 'pointers']
iir_1_3	['boolean retrieval model', 'simple conjunctive query', 'dictionary', 'intersection', 'postings lists', 'postings list', 'documents', 'merge algorithm', 'docid', 'query optimization', 'query processing', 'terms', 'term', 'binary searches', 'queries', 'query', 'querying', 'boolean queries', 'inverted index', 'conjunctive query', 'posting', 'postings', 'document frequency', 'pointers', 'pointer', 'indexing', 'collection', 'merging']
iir_1_4	['ranked retrieval models', 'free text queries', 'free text querying', 'documents', 'document', 'query', 'querying', 'queries', 'boolean operations', 'boolean operators', 'boolean expression', 'terms', 'term', 'proximity operator', 'information need', 'information needs', 'phrase search', 'boolean queries', 'boolean query', 'boolean search', 'inverted index', 'dictionary', 'postings lists', 'term frequency', 'unstructured search', 'boolean model', 'vector space model', 'boolean retrieval models', 'query optimization', 'ad hoc searching', 'ranked retrieval', 'wildcard query', 'boolean query models', 'recall', 'precision', 'query models', 'index structures', 'unstructured information', 'indexing']
iir_2_1	['postings lists', 'postings list', 'inverted index', 'tokens', 'tokenization', 'token', 'term', 'terms', 'documents', 'document', 'indexing', 'index', 'linguistic preprocessing', 'proximity queries', 'boolean models', 'boolean model', 'character sequence decoding', 'document delineation', 'unicode utf-8', 'heuristic methods', 'encoding', 'encodings', 'xml documents', 'document unit', 'html pages', 'indexing granularity', 'precision', 'recall', 'xml retrieval', 'ir system', 'document collection', 'vocabulary', 'inverted index construction', 'machine learning classification problem', 'query', 'querying', 'ascii encoding', 'byte', 'multibyte encoding schemes', 'metadata', 'binary representation', 'decoding', 'xml files', 'markup', 'character encodings', 'digital representation', 'collection', 'relevant information', 'implicit proximity search', 'index granularity', 'information needs', 'usage patterns']
iir_2_2	['vocabulary', 'terms', 'term', 'tokenization', 'tokens', 'tokenizer', 'token', 'type', 'ir systems', 'ir system', 'document', 'documents', 'normalization processes', 'query', 'queries', 'language identification', 'database', 'hyphenation', 'hyphen', 'hyphens', 'phrase queries', 'phrase query', 'boolean retrieval systems', 'retrieval systems', 'compounds', 'compound-splitter', 'word segmentation', 'hidden markov models', 'conditional random fields', 'segmentations', 'word-based indexing', 'stop words', 'collection frequency', 'stop list', 'stop lists', 'document rankings', 'postings lists', 'postings list', 'normalization', 'normalizations', 'token normalization', 'equivalence classes', 'equivalence class', 'equivalence classing', 'query expansion', 'case-folding', 'truecasing', 'document collections', 'document collection', 'language identification classifier', 'stemming', 'lemmatization', 'lemmatizer', 'lemma', 'lovins stemmer', 'recall', 'precision', 'type/token distinction', 'token distinction', 'ir', 'dictionary', 'index', 'indexing', 'semantic identifiers', 'tokenization phase', 'boolean', 'boolean queries', 'free text queries', 'linguistic processing', 'character k-grams', 'postings', 'phrase search', 'phrase searches', 'unnormalized tokens', 'soundex algorithm', 'one-pass lovins stemmer', 'paice/husk stemmer', 'natural language processing', 'morphological analysis', 'document unit', 'index terms', 'classifiers', 'classification problem', 'search', 'phrase index', 'compound-splitter module', 'machine learning sequence models', 'machine learning sequence model', 'keyword searches', 'web search engines', 'web search engine', 'compression techniques', 'impact-sorted indexes', 'token list', 'query expansion list', 'query term', 'query expansion dictionary', 'non-ascii text', 'retrieval', 'phonetic equivalents', 'stemmers', 'stemmer', 'linguistic morphology']
iir_2_3	['postings list intersection', 'skip pointers', 'postings lists', 'postings list', 'skip list', 'skip lists', 'query', 'query terms', 'search engine', 'term', 'skip list pointer', 'skip span', 'index', 'index construction', 'postings list data structures', 'recall', 'inverted index', 'encoding', 'disk postings list']
iir_2_4	['positional postings', 'positional posting', 'phrase queries', 'phrase query', 'queries', 'query', 'postings lists', 'postings list', 'ranked retrieval', 'biword indexes', 'biword index', 'boolean query', 'boolean queries', 'documents', 'document', 'part-of-speech-tagging', 'phrase index', 'terms', 'term', 'vocabulary', 'positional indexes', 'positional index', 'token index', 'merge operation', 'document collection', 'next word index', 'implicit phrase queries', 'term proximity weighting', 'biwords', 'biword indexing model', 'indexing model', 'tokenize', 'tokens', 'biword dictionary', 'term frequency', 'inverted index', 'k word proximity searches', 'postings intersection', 'positional postings lists', 'search engines', 'search engine', 'query terms', 'index', 'part-of-speech patterns', 'searches', 'dictionary', 'postings', 'posting', 'docid', 'non-positional index', 'compressed positional index', 'collection']
iir_3_1	['dictionaries', 'dictionary', 'inverted indexes', 'inverted index', 'proximity queries', 'data structures', 'data structure', 'terms', 'term', 'vocabulary', 'wildcard query', 'documents', 'document', 'query term', 'query terms', 'standard inverted index', 'postings list', 'collection', 'postings', 'hashing', 'search trees', 'search tree', 'keys', 'key', 'search engines', 'search engine', 'pointer', 'pointers', 'binary tree', 'binary search tree', 'efficient search', 'b-tree', 'b-trees', 'document collection', 'query', 'queries', 'vocabulary term', 'vocabulary terms', 'hash function', 'balance property', 'binary test', 'search', 'vocabulary lookup operation', 'hash collisions', 'node', 'children', 'root', 'sub-trees', 'tree', 'rebalancing', 'branch', 'disk blocks']
iir_3_2	['wildcard queries', 'wildcard query', 'documents', 'document', 'term', 'terms', 'stemming', 'search engine', 'search engines', 'trailing wildcard query', 'trailing wildcard queries', 'search tree', 'dictionary', 'reverse b-tree', 'leading wildcard queries', 'b-tree', 'b-trees', 'vocabulary', 'inverted index', 'boolean query', 'vocabulary terms', 'permuterm indexes', 'permuterm index', 'permuterm vocabulary', 'index', 'rotated wildcard query', 'document retrieval', 'k-gram indexes', 'k-gram index', 'postings list', 'k-gram', 'k-grams', 'post-filtering', 'boolean operators', 'query', 'queries', 'search string', 'tree', 'permuterm b-tree', 'retrieval', 'query term', 'root-to-leaf path', 'path', 'dictionary terms', 'string-matching operation', 'boolean combinations']
iir_3_3	['documents', 'document', 'edit distance', 'k-gram overlap', 'spelling correction algorithms', 'query', 'queries', 'search engines', 'search engine', 'isolated-term correction', 'context-sensitive correction', 'edit operations', 'edit operation', 'levenshtein distance', 'dynamic programming algorithm', 'terms', 'term', 'vocabulary', 'decoding problem', 'b-tree', 'permuterm index', 'dictionary terms', 'b-tree traversal', 'k-gram indexes', 'k-gram index', 'vocabulary terms', 'vocabulary term', 'query term', 'query terms', 'k-grams', 'postings', 'bigram', 'bigrams', 'jaccard coefficient', 'coefficient', 'context sensitive spelling correction', 'spelling correction', 'spell-correction', 'dictionary', 'spelling suggestion', 'algorithm', 'collection', 'phonetic similarity', 'dynamic programming', 'spelling correction problem', 'search', 'query string', 'query logs', 'biword', 'biwords']
iir_3_4	['phonetic correction', 'tolerant retrieval', 'query', 'phonetic hashing', 'phonetic hash', 'inverted index', 'vocabulary terms', 'soundex code', 'soundex codes', 'soundex index', 'soundex', 'soundex algorithms', 'soundex algorithm', 'soundex map', 'equivalence class', 'equivalence classes', 'algorithms', 'algorithm', 'searches', 'terms', 'query terms', 'soundex match', 'string']